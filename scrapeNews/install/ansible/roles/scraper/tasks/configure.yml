---
- name: clone repo
  git: 
    repo: "{{ repo_url }}"
    clone: yes
    dest: "{{ path_base }}/scrape"
    update: no

- name: create deploy base
  file:
    path: "{{ deploy_base }}"
    state: directory

- name: create web deploy base
  file:
    path: "{{ deploy_base }}/web"
    state: directory
  
- name: create directory stucture
  file:
    path: "{{ deploy_base }}/web/scrapeNews"
    state: directory

- name: create logs base
  file:
    path: "{{ deploy_base }}/logs"
    state: directory

- name: create virtualenv and install requirements
  pip:
    requirements: "{{ path_base }}/scrape/requirements.txt"
    virtualenv: "{{ deploy_base}}/venv"
    virtualenv_python: python3

- name: install scrapyd-client for easy deployment
  pip:
    name: git+https://github.com/scrapy/scrapyd-client#egg=scrapyd-client
    virtualenv: "{{ deploy_base }}/venv"
    virtualenv_python: python3

- name: create web directory structure
  command: cp -r -f {{ path_base }}/scrape/scrapeNews/{{ item }} {{ deploy_base }}/web/{{ item }}
  with_items:
    - "scrapeNews/db.py"
    - "scrapeNews/settings.py"
    - "web_app/"

- name: copy scheduler script
  command: cp -f {{ path_base }}/scrape/scrapeNews/scheduler.py  {{ deploy_base }}/

- name: initialise the python package
  file:
    path: "{{ deploy_base }}/web/__init_.py"
    state: touch

- name: install start script
  template:
    src: start.j2
    dest: "{{ deploy_base }}/start"
    mode:  u=rwx,g=rwx,o=rx

- name: install environment variables script
  template:
    src: env.sh.j2
    dest: "{{ deploy_base }}/env.sh"
    mode:  u=rwx,g=rwx,o=rx

- name: chown all directories
  file:
    path: "{{ path_base }}"
    recurse: yes
    owner: "{{ user_name }}"
    group: "{{ user_name }}"